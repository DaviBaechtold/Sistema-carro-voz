#!/bin/bash

# Script completo de configura√ß√£o do Assistente de Voz
# Para Google Dev Board (AA1) com Microfone M-305

set -e  # Parar se houver erro

echo "=== Assistente de Voz - Configura√ß√£o Completa ==="
echo "Google Dev Board (AA1) + Microfone M-305"
echo

# Fun√ß√£o para mostrar op√ß√µes
show_menu() {
    echo "Escolha uma op√ß√£o:"
    echo "1) Configura√ß√£o inicial completa (primeira vez)"
    echo "2) Instalar/atualizar vozes TTS"
    echo "3) Testar sistema (microfone + vozes)"
    echo "4) Executar assistente"
    echo "5) Sair"
    echo
    read -p "Digite sua escolha (1-5): " choice
}

# Configura√ß√£o inicial
setup_initial() {
    echo "üîß Configura√ß√£o inicial..."
    
    # Atualizar sistema
    echo "Atualizando sistema..."
    sudo apt update && sudo apt upgrade -y
    
    # Instalar depend√™ncias do sistema
    echo "Instalando depend√™ncias do sistema..."
    sudo apt install -y python3-pip python3-dev python3-venv
    sudo apt install -y portaudio19-dev
    sudo apt install -y alsa-utils pulseaudio
    
    # Configurar √°udio
    echo "Configurando √°udio..."
    sudo usermod -a -G audio $USER
    
    # Criar ambiente virtual se n√£o existir
    if [ ! -d "venv" ]; then
        echo "Criando ambiente virtual..."
        python3 -m venv venv
    fi
    
    # Ativar ambiente virtual e instalar depend√™ncias
    echo "Instalando depend√™ncias Python..."
    source venv/bin/activate
    pip install --upgrade pip
    pip install -r requirements.txt
    
    echo "‚úÖ Configura√ß√£o inicial conclu√≠da!"
    echo "‚ö†Ô∏è  Pode ser necess√°rio reiniciar para aplicar configura√ß√µes de √°udio"
}

# Instalar vozes
install_voices() {
    echo "üé§ Instalando vozes TTS mais naturais..."
    
    # Detectar distribui√ß√£o
    if command -v apt-get &> /dev/null; then
        DISTRO="debian"
    elif command -v yum &> /dev/null; then
        DISTRO="redhat"
    elif command -v pacman &> /dev/null; then
        DISTRO="arch"
    else
        echo "‚ùå Distribui√ß√£o n√£o suportada automaticamente."
        echo "Por favor, instale manualmente os pacotes de voz TTS."
        return 1
    fi
    
    echo "üìç Distribui√ß√£o detectada: $DISTRO"
    
    case $DISTRO in
        "debian")
            echo "Instalando vozes para Debian/Ubuntu..."
            sudo apt-get update
            sudo apt-get install -y espeak espeak-data espeak-data-pt
            sudo apt-get install -y festival festvox-br-cid
            sudo apt-get install -y mbrola mbrola-br1 mbrola-br3 2>/dev/null || echo "‚ö†Ô∏è MBROLA n√£o encontrado no reposit√≥rio"
            sudo apt-get install -y flite
            sudo apt-get install -y speech-dispatcher-espeak-ng 2>/dev/null || echo "‚ö†Ô∏è espeak-ng n√£o encontrado"
            ;;
        "redhat"|"fedora")
            PKG_MANAGER=$(command -v dnf &> /dev/null && echo "dnf" || echo "yum")
            echo "Instalando vozes para RedHat/CentOS/Fedora..."
            sudo $PKG_MANAGER install -y espeak espeak-data festival flite
            ;;
        "arch")
            echo "Instalando vozes para Arch Linux..."
            sudo pacman -S --noconfirm espeak espeak-ng festival flite
            if command -v yay &> /dev/null; then
                yay -S --noconfirm mbrola-voices-br1 mbrola-voices-br3 2>/dev/null || echo "‚ö†Ô∏è Vozes MBROLA n√£o encontradas no AUR"
            fi
            ;;
    esac
    
    echo "‚úÖ Vozes instaladas! Reinicie o assistente para detectar as novas vozes."
}

# Testar sistema
test_system() {
    echo "üß™ Testando sistema..."
    
    # Ativar ambiente virtual
    source venv/bin/activate
    
    # Executar testes
    python3 -c "
import voice_assistant
print('Testando microfone e vozes...')
voice_assistant.test_voices()
print()
voice_assistant.test_microphone()
"
    echo "‚úÖ Teste conclu√≠do!"
}

# Executar assistente
run_assistant() {
    echo "üöÄ Iniciando assistente de voz..."
    echo
    echo "Como usar:"
    echo "- Diga: 'Assistente, tocar m√∫sica'"
    echo "- Diga: 'OK Google, ligar para Jo√£o'"
    echo "- Diga: 'Carro, navegar para casa'"
    echo "- Para encerrar: 'Assistente, tchau'"
    echo
    
    # Ativar ambiente virtual
    source venv/bin/activate
    
    # Executar assistente
    python3 voice_assistant.py
}

# Menu principal
while true; do
    show_menu
    
    case $choice in
        1)
            setup_initial
            ;;
        2)
            install_voices
            ;;
        3)
            test_system
            ;;
        4)
            run_assistant
            ;;
        5)
            echo "Saindo..."
            exit 0
            ;;
        *)
            echo "Op√ß√£o inv√°lida. Tente novamente."
            ;;
    esac
    
    echo
    read -p "Pressione Enter para continuar..."
    echo
done
